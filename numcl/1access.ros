#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros dynamic-space-size=8000 -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '(:numcl) :silent t)
  )

#|
This file is a part of NUMCL project.
Copyright (c) 2019 IBM Corporation
SPDX-License-Identifier: LGPL-3.0-or-later

NUMCL is free software: you can redistribute it and/or modify it under the terms
of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any
later version.

NUMCL is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
NUMCL.  If not, see <http://www.gnu.org/licenses/>.
|#

(defpackage :ros.script.benchmark
  (:use :numcl))
(in-package :ros.script.benchmark)
#+sbcl
(declaim (sb-ext:muffle-conditions sb-ext:compiler-note style-warning))

(load (merge-pathnames "timer.lisp" *load-pathname*))

(defun main (&aux (a (zeros '(100 100 100 100) :type 'single-float)))
  (banner)
  (with-timing (:name "access/0")
    (dotimes (i 100)
      (setf (aref a i i i i) 1.0)))
  (with-timing (:name "access/1")
    (dotimes (i 100)
      (setf (aref a i i i t) 1.0)))
  (with-timing (:name "access/2")
    (dotimes (i 100)
      (setf (aref a i i t i) 1.0)))
  (with-timing (:name "access/3")
    (dotimes (i 100)
      (setf (aref a i t i i) 1.0)))
  (with-timing (:name "access/4")
    (dotimes (i 100)
      (setf (aref a t i i i) 1.0))))
